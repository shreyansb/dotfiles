" ---- Shreyans Bhansali ----
call pathogen#runtime_append_all_bundles() 
call pathogen#helptags()

" ---- General settings -----
" Some taken from: http://amix.dk/vim/vimrc.html

filetype on
filetype plugin on
filetype indent on

syntax on
syntax enable

set background=dark
"set background=light
set t_Co=256
"colorscheme ir_black_shreyans
let g:solarized_contrast="high"
colorscheme solarized
set number		"show line numbers
set history=700 	"number of lines of history for VIM to remember
set autoread		"auto update file if changed externally
set ruler		"show current position
set ignorecase		"ignore case when searching
set hlsearch		"highlight search things
set incsearch		"make search act like search in modern browsers
set showmatch		"show matching bracket when cursor is over one of them
set noerrorbells	"no sounds on errors
set visualbell
set t_vb=
set nobackup		"no backing up of files since it's all in svn
set noswapfile
set nowb		
set backspace=indent,eol,start
set tags+=./tags;
set cursorline
set tabstop=4
autocmd BufRead,BufNewFile * setlocal iskeyword-=.
autocmd BufRead,BufNewFile * setlocal iskeyword-=)
autocmd BufRead,BufNewFile * setlocal iskeyword-=(
set iskeyword-=. 	"treat as wordbreaks
set iskeyword-=(
set iskeyword-=)

autocmd WinEnter * setlocal cursorline
autocmd WinLeave * setlocal nocursorline
autocmd BufRead,BufNewFile,BufDelete * :syntax on

let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1

autocmd! bufwritepost vimrc source ~/.vimrc	"reload vimrc when it is updated

set statusline=%F%m%r%h%w[%L][%{&ff}]%y[%p%%][%04l,%04v]

"" command-t
let g:commandTMaxHeight=10
set wildignore+=*.pyc

"" Settings for specific language files
autocmd BufReadPre venmo_tests.py :let b:did_pyflakes_plugin=1
au BufRead,BufNewFile *.mustache set syntax=html autoindent tabstop=4 expandtab shiftwidth=4 softtabstop=4

"" Python
autocmd FileType python set complete+=k~/.vim/syntax/python.vim isk+=.,(
autocmd BufRead,BufNewFile *.py syntax on
autocmd BufRead,BufNewFile *.py set ai
au! FileType python setl nosmartindent
au FileType python setl autoindent tabstop=4 expandtab shiftwidth=4 softtabstop=4
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType python set ft=python.django " For SnipMate
let g:pydiction_location = '~/.vim/ftplugin/pydiction-1.2/complete-dict'

"" Ruby
au FileType ruby setl autoindent tabstop=4 expandtab shiftwidth=4 softtabstop=4

"" javascript
au FileType javascript setl autoindent tabstop=4 expandtab shiftwidth=4 softtabstop=4

"" HTML
au FileType html setl autoindent tabstop=4 expandtab shiftwidth=4 softtabstop=4

"" CSS
au BufRead,BufNewFile *.scss set filetype=css
au FileType css setl autoindent tabstop=4 expandtab shiftwidth=4 softtabstop=4

autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType html set ft=html.django_template " For SnipMate

"" Go
au BufNewFile,BufRead *.go set filetype=go
au FileType go setl autoindent tabstop=4 expandtab shiftwidth=4 softtabstop=4
set rtp+=$GOROOT/misc/vim

"" key mappings
nmap ,t <Leader>t
nmap ,a ggVG"*y
imap jj <Esc>

"clear the search buffer, not just remove the highlight
map \c :let @/ = ""<CR>

" open the ctag definition in a vertical split
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>

"Easy edit of vimrc
nmap \s :source $MYVIMRC<CR>
nmap \v :e $MYVIMRC<CR>


" add a new line above or below the current one without entering insert mode
map <S-Enter> O<Esc>
map <CR> o<Esc>
"
"" Window movements
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

"" silly stuff
map <Up> :echo "no!" <cr>
map <Right> :echo "no!" <cr>
map <Down> :echo "no!" <cr>
map <Left> :echo "no!" <cr>
